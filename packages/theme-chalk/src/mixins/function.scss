// 全局的 SCSS 自定义函数
@use 'config';
@function getCssVar($args...) {
  @return var(#{joinVarName($args)});
}

@function joinVarName($list) {
  $name: '--' + config.$namespace;
  @each $item in $list {
    @if $item != '' {
      $name: $name + '-' + $item;
    }
  }
  @return $name;
}
// bem('tag', '', ‘primary’)  primary
// bem('block', 'element', 'modifier') => 'el-block__element--modifier'
@function bem($block, $element: '', $modifier: '') {
  //     ice                    -                         tag
  $name: config.$namespace + config.$common-separator + $block;

  @if $element != '' {
    $name: $name + config.$element-separator + $element;
  }

  @if $modifier != '' {
    $name: $name + config.$modifier-separator + $modifier;
  }

  // @debug $name;
  @return $name;
}
// BEM
@mixin b($block) {
  $B: config.$namespace + config.$common-separator + $block !global;

  .#{$B} {
    @content;
  }
}
@mixin e($element){
  $currentSelector:$B + config.$element-separator+ $element !global;

  // @at-root {
  //   .#{$currentSelector}{
  //     @content;
  //   }
  // }
  .#{$currentSelector}{
    @content;
  }
}
@mixin em($modifier){
  $m:$currentSelector+config.$modifier-separator+$modifier;
  .#{$m}{
    @content;
  }
}